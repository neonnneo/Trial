"""Django用設定ファイル

     * ソースコードの一番始めに記載すること
     * importより前に記載する

Django settings for tutorial project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/

History:
   更新日   更新者  更新内容
   2020/08/16   neonnneo    PROJECT_ROOT、LOGGINGを追加
                            TIME_ZONEはUTC →　Asia/Tokyoへ変更
                            LANGUAGE_CODEはen-us → jaへ変更
"""

# os モジュールをインポートしておく
import os

# プロジェクト名
PROJECT_NAME = "tutorial"

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# プロジェクトのルート。
PROJECT_ROOT = os.path.abspath(os.path.join(
    os.path.dirname(__file__), os.pardir))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!4l!us6#mmkl6#@)-u=y+6wk@3fm-$y(%i94sy2h6n$!_#=u3^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    # 'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    # 'django.contrib.staticfiles',
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tutorial.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tutorial.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# PostgreSQLとする。
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODEはen-us → ja
LANGUAGE_CODE = 'ja'

# TIME_ZONEはUTC → Asia/Tokyo
TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {  # ログの書式を設定
        'verbose': {
            'format': '%(asctime)s %(levelname)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        },
    },
    'handlers': {
        'mail_admins': {    # メールを送信する
            'level': 'ERROR',  # ERROR以上の場合出力
            'class': 'django.utils.log.AdminEmailHandler',  # ログを出力するクラス
            'formatter': 'simple',  # どの出力フォーマットで出すかを名前で指定
        },
        # 'file': {  # ファイルに出力する
        #     'level': 'DEBUG',  # DEBUG以上の場合出力
        #     'class': 'logging.FileHandler',  # ログを出力するクラス
        #     'filename': os.path.join(BASE_DIR, 'django.log'),
        #     'formatter': 'simple',  # どの出力フォーマットで出すかを名前で指定
        # },
        'debug': {  # ファイルに出力する
            'level': 'INFO',  # DEBUG以上の場合出力
            'class': 'logging.handlers.TimedRotatingFileHandler',  # ログを出力するクラス
            'when': 'D',
            'interval': 1,
            'filename': os.path.join(BASE_DIR, PROJECT_NAME + '_debug.log'),
            'formatter': 'simple',  # どの出力フォーマットで出すかを名前で指定
        },
        'info': {  # ファイルに出力する
            'level': 'INFO',  # DEBUG以上の場合出力
            'class': 'logging.handlers.TimedRotatingFileHandler',  # ログを出力するクラス
            'when': 'D',
            'interval': 1,
            'filename': os.path.join(BASE_DIR, PROJECT_NAME + '_info.log'),
            'formatter': 'simple',  # どの出力フォーマットで出すかを名前で指定
        },
        'error': {  # ファイルに出力する
            'level': 'INFO',  # DEBUG以上の場合出力
            'class': 'logging.handlers.TimedRotatingFileHandler',  # ログを出力するクラス
            'when': 'D',
            'interval': 1,
            'filename': os.path.join(BASE_DIR, PROJECT_NAME + '_error.log'),
            'formatter': 'simple',  # どの出力フォーマットで出すかを名前で指定
        },
    },
    'loggers': {    # ロガーを設定、ここに設定した名前を呼び出す
        'debug': {
            'handlers': ['debug'],
            'level': 'DEBUG',
        },
        'info': {
            'handlers': ['info'],
            'level': 'INFO',
        },
        'error': {
            'handlers': ['error', 'mail_admins'],
            'level': 'ERROR',
        },
    }
}
